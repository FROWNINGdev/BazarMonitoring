# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è GitHub Release
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .\create_release.ps1 [–≤–µ—Ä—Å–∏—è]

param(
    [string]$Version = "1.0.0",
    [string]$GitHubToken = $env:GITHUB_TOKEN,
    [string]$RepoOwner = "FROWNINGdev",
    [string]$RepoName = "bazarmonitoring"
)

Write-Host "=== –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ v$Version ===" -ForegroundColor Green

# 1. –°–æ–∑–¥–∞–µ–º git tag
Write-Host "`n1. –°–æ–∑–¥–∞–Ω–∏–µ git tag v$Version..." -ForegroundColor Yellow
$tagMessage = Get-Content -Path "release_tag_message.txt" -Raw -Encoding UTF8
git tag -a "v$Version" -F "release_tag_message.txt"
if ($LASTEXITCODE -ne 0) {
    Write-Host "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ tag" -ForegroundColor Red
    exit 1
}
Write-Host "‚úì Tag v$Version —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green

# 2. Push tag –≤ GitHub
Write-Host "`n2. –û—Ç–ø—Ä–∞–≤–∫–∞ tag –≤ GitHub..." -ForegroundColor Yellow
git push origin "v$Version"
if ($LASTEXITCODE -ne 0) {
    Write-Host "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ tag" -ForegroundColor Red
    exit 1
}
Write-Host "‚úì Tag –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ GitHub" -ForegroundColor Green

# 3. –°–æ–∑–¥–∞–Ω–∏–µ GitHub Release (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–∫–µ–Ω)
if ($GitHubToken) {
    Write-Host "`n3. –°–æ–∑–¥–∞–Ω–∏–µ GitHub Release..." -ForegroundColor Yellow
    
    $releaseNotes = @"
## üéâ Release v$Version - BazarMonitoring

### ‚ú® Main Features

- ‚úÖ **Real-time bazaar monitoring**
- üó∫Ô∏è **Interactive map** of Uzbekistan with regional boundaries
- üìä **Statistics** on cameras and ROI
- üìÑ **Excel export** with detailed reports
- üõ†Ô∏è **Administrative panel** for bazaar management
- üåç **Multi-language support** (RU/UZ/EN)
- üåô **Dark/light theme**

### üì¶ Installation

\`\`\`bash
git clone https://github.com/$RepoOwner/$RepoName.git
cd $RepoName
docker-compose up --build
\`\`\`

### üìö Documentation

Full documentation available in [README.md](README.md)

### üë• Authors

- **FROWNINGdev** - Lead Developer
- **asadullokhn** - Co-Developer

### üîó Links

- [Documentation](README.md)
- [Contributing Guide](CONTRIBUTING.md)
- [Issues](https://github.com/$RepoOwner/$RepoName/issues)
"@

    $body = @{
        tag_name = "v$Version"
        name = "Release v$Version"
        body = $releaseNotes
        draft = $false
        prerelease = $false
    } | ConvertTo-Json

    $headers = @{
        "Authorization" = "token $GitHubToken"
        "Accept" = "application/vnd.github.v3+json"
    }

    try {
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/$RepoOwner/$RepoName/releases" `
            -Method Post -Headers $headers -Body $body -ContentType "application/json"
        
        Write-Host "‚úì GitHub Release —Å–æ–∑–¥–∞–Ω: $($response.html_url)" -ForegroundColor Green
    } catch {
        Write-Host "‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ GitHub Release: $_" -ForegroundColor Yellow
        Write-Host "  –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é –Ω–∞ GitHub: https://github.com/$RepoOwner/$RepoName/releases/new" -ForegroundColor Yellow
    }
} else {
    Write-Host "`n3. GitHub Token –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Yellow
    Write-Host "  –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è GITHUB_TOKEN –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ª–∏–∑–∞" -ForegroundColor Yellow
    Write-Host "  –ò–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ª–∏–∑ –≤—Ä—É—á–Ω—É—é: https://github.com/$RepoOwner/$RepoName/releases/new" -ForegroundColor Yellow
}

Write-Host "`n=== –†–µ–ª–∏–∑ v$Version –≥–æ—Ç–æ–≤! ===" -ForegroundColor Green
Write-Host "Tag –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: v$Version" -ForegroundColor Cyan
if ($GitHubToken) {
    Write-Host "GitHub Release —Å–æ–∑–¥–∞–Ω" -ForegroundColor Cyan
} else {
    Write-Host "–°–æ–∑–¥–∞–π—Ç–µ GitHub Release –≤—Ä—É—á–Ω—É—é: https://github.com/$RepoOwner/$RepoName/releases/new" -ForegroundColor Cyan
}

